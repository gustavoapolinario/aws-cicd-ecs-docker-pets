Description: >
  This template deploys an Application Load Balancer that exposes our various ECS services.
  We create them it a seperate nested template, so it can be referenced by all of the other nested templates.

Parameters:

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

  Subnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
    
  IsInternal:
    Description: Is a internal load balance?
    Type: String
    AllowedValues: [ "true", "false" ]
    Default: false
  
  # It is to lower number of caracters. nested CFN have greater name and get error
  ParentStackName:
    Description: Name of parent stack to use in LB name
    Type: String

Conditions:
  ShouldBeInternal: !Equals [true, !Ref IsInternal]
  
Resources:

  # This security group defines who/where is allowed to access the Application Load Balancer.
  # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
  # it further if you want.
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VPC
      GroupDescription: Access to the load balancer that sits in front of ECS
      SecurityGroupIngress:
        # Allow access from anywhere to our ECS services
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      Tags: 
        - Key: Name
          Value: !Sub '${AWS::StackName}-LoadBalancers'

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref ParentStackName
      Scheme: !If [ShouldBeInternal, "internal", "internet-facing"]
      Subnets: !Ref Subnets
      SecurityGroups: 
        - !Ref LoadBalancerSecurityGroup

  ListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroupHttp

  DefaultTargetGroupHttp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP
       
Outputs:

  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer

  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt LoadBalancer.DNSName

  ListenerHTTP:
    Description: A reference to a port 80 listener
    Value: !Ref ListenerHTTP

  LoadBalancerFullName:
    Description: Full name of Application Load Balancer
    Value: !GetAtt LoadBalancer.LoadBalancerFullName

  LoadBalancerSecurityGroup:
    Description: A reference to the security group for load balancers
    Value: !Ref LoadBalancerSecurityGroup